#@ load("/values.star", "values")

#@ if values.minio.deployDefaultMinio:
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: #@ values.minio.namespace
  name: minio
  labels:
    component: minio
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      component: minio
  template:
    metadata:
      labels:
        component: minio
    spec:
      volumes:
      - name: storage
        emptyDir: {}
      - name: config
        emptyDir: {}
      containers:
      - name: minio
        image: minio/minio:latest
        imagePullPolicy: IfNotPresent
        args:
        - server
        - /storage
        - --config-dir=/config
        env:
        - name: MINIO_ACCESS_KEY
          value: #@ values.minio.accessKey
        - name: MINIO_SECRET_KEY
          value: #@ values.minio.secretAccessKey
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: storage
          mountPath: "/storage"
        - name: config
          mountPath: "/config"

#@ if values.minio.namespace != values.namespace:
---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ values.minio.namespace
#@ end

---
apiVersion: v1
kind: Service
metadata:
  namespace: #@ values.minio.namespace
  name: minio
  labels:
    component: minio
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    component: minio

---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: #@ values.minio.namespace
  name: minio-setup
  labels:
    component: minio
spec:
  template:
    metadata:
      name: minio-setup
    spec:
      restartPolicy: OnFailure
      volumes:
      - name: config
        emptyDir: {}
      containers:
      - name: mc
        image: minio/mc:latest
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - #@ "mc --config-dir=/config config host add velero http://minio:9000 {} {} && mc --config-dir=/config mb -p velero/velero".format(values.minio.accessKey, values.minio.secretAccessKey)
        volumeMounts:
        - name: config
          mountPath: "/config"
#@ end
